// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Represents a unique user's personal information
model User {
  id              String @id @default(cuid())
  name            String?
  role            Role @default(USER)
  credential      Credential?
  boards          Board[]
}

// Represents a credential for authentication
model Credential {
  id         String @id @default(cuid())
  username   String @unique
  userId     String @unique
  hash       String
  email      String @unique
  verified   Boolean @default(false)
  user       User   @relation(fields: [userId], references: [id])
}

model Board {
  id          String @id @default(cuid())
  title       String
  taskLists   TaskList[]
  userId      String
  user        User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model TaskList {
  id      String @id @default(cuid())
  title   String
  tasks   Task[] 
  boardId String
  board   Board @relation(fields: boardId, references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Task {
  id         String @id @default(uuid())
  complete   Boolean @default(false)
  text       String
  taskListId String
  taskList   TaskList @relation(fields: [taskListId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

// Represents a user role used for authorization
enum Role {
  USER
  ADMIN
}